=head1 NAME

xde-menu - XDG Compliant Menu for XDE

=head1 SYNOPSIS

xde-menu -- [ OPTIONS ]

=head1 DESCRIPTION

B<xde-menu> is a menu generator, tray menu, and pop-up menu that can be
used to both generate XDG compliant menus for a number of popular
light-weight window managers as well as providing a system tray and
pop-up menu.

B<xde-menu> is capable of generating either a complete menu for a number
of well-known window managers, or for generating a sub-menu that can be
included in the root menu of those window managers.

=head1 OPTIONS

B<xde-menu> uses L<getopt_long_only(3)>, so non-ambiguous option
abbreviations are permitted.  B<xde-menu> recognizes the following
options:

=head2 COMMAND OPTIONS

Command options affect the primary operating mode of the program.  Only
one command option can be specified.  B<xde-menu> recognizes the
following command options:

=over

=item [B<--popup>, B<-P>]

Specifies that B<xde-menu> is to request a running instance to pop-up a
menu.  The menu to pop up, the location and invocation of the pop-up is
controlled by additional general options.

=item B<--monitor>, B<-m>

Specifies that B<xde-menu> is to monitor pertinent directories for
changes and regenerate the menu when changes are detected.  This option
implies the B<--output> option.  This options requires L<libinotify(3)>.

=item B<--replace>, B<-R>

Replace a currently running instance (that was invoked with the
B<--monitor> option).  It is not an error if no other instance is
running.  This option implies the B<--monitor> option.

=item B<--quit>, B<-q>

Ask a currently running instance (that was invoked with the B<--monitor>
option) to quit.  It is not an error if no other instance is running.

=item B<--help>, B<-h>

Print usage information, including the current values of option
defaults, and exit.

=item B<--version>, B<-V>

Print version information and exit.

=item B<--copying>, B<-C>

Print copying information and exit.

=back

=head2 GENERAL OPTIONS

=over

=item B<--display>, B<-d> I<DISPLAY>

Specify the display to use (overriding the B<DISPLAY> environment
variable).  The default is the value of the B<DISPLAY> environment
variable.

=item B<--die-on-error>, B<-e>

Abort execution on any error.

=back

=head2 MENU FORMAT OPTIONS

The following options affect the formatting or output of the window
manager root window menu, system tray menu and pop-up menu.  Not all
options affect the system tray and pop-up menus.

=item B<--format>, B<-f> I<FORMAT>

Specify the output format.  Recognized output formats are as follows:
L<2bwm(1)>,
L<adwm(1)>,
L<afterstep(1)>,
L<awesome(1)>,
L<blackbox(1)>,
L<ctwm(1)>,
L<cwm(1)>,
L<dtwm(1)>,
L<dwm(1)>,
L<echinus(1)>,
L<etwm(1)>,
L<fluxbox(1)>,
L<flwm(1)>,
L<fvwm(1)>,
L<icewm(1)>,
L<jwm(1)>,
L<matwm2(1)>,
L<metacity(1)>,
L<mwmw(1)>,
L<openbox(1)>,
L<pekwm(1)>,
L<spectrwm(1)>,
L<twm(1)>,
L<uwm(1)>,
L<vtwm(1)>,
L<waimea(1)>,
L<wind(1)>,
L<wmaker(1)>,
L<wmx(1)>,
L<yeahwm(1)>.

When unspecified, the setting of the C<_XDE_WM_NAME> property on the
root window (or the C<_NET_WM_NAME> property on the window manager check
window) is examined to determine the format.  This is accomplished by
converting the value of either property to all lower case.  See also,
L</ENVIRONMENT>.

=item B<--fullmenu>, B<-F>, B<--nofullmenu>, B<-N>

When specified, output a full menu and not only the application
sub-menu, or not.  The default is to output a full menu.  This also
affects the system tray menu and pop-up menus.

=item B<--desktop>, B<-d> I<DESKTOP>

Specify the desktop name for C<NotShowIn> and C<OnlyShowIn> comparisons.
The default is the all upper-case string corresponding to the format
unless the C<XDG_CURRENT_DESKTOP> environment variable is defined.

=item B<--charset>, B<-c> I<CHARSET>

Specify the character set with which to output the window manager root
menu.  Defaults to the character set in use by the current locale.  This
does not affect system tray and pop-up menus (which are both UTF-8).

=item B<--language>, B<-l> I<LANGUAGE>

Specify the output language for the menu.  Defaults to the language in
the current locale.  This option affects all menus.

=item B<--root-menu>, B<-r> I<MENU>

Specify the location of the root menu file.  The default is calculated
using XDG environment variables (see L</ENVIRONMENT>), and defaults to
the file F<${XDG_MENU_PREFIX}applications.menu> in the
F<$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS> search path.  Note, however, that
B<xde-menu> supports both I<applications> and I<system> menus using the
B<--menu> option.

=item B<--output>, B<-o> I<FILENAME>

Write the window manager root menu output to the file, I<FILENAME>.
This is particularly useful with option B<--die-on-error> as the output
will not be written at all if an error is encountered.  If the
I<FILENAME> is not specified, the setting of the C<_XDE_WM_MENU>
property on the root window is examined to determine the location of the
menu file.  When the property is not set or not available, the default
menu location for the current B<--format> will be used.

Note that not all light-weight window managers support a root menu.

Note also that at startup, B<xde-menu> will wait several seconds for a
window manager to appear if one is not present at initialization.

=item B<--noicons>, B<-n>

Do not include icons in the generated menu files.  This option has no
effect when it is not possible to generate icons for the menu format.
That is, when the B<--format> is one such as L<blackbox(1)>, or
L<waimea(1)>, it is not possible to place icons in the root menu and
this option is therefore ignored.  The default is to place icons in icon
capable generated menus.

This option affects system tray menus and pop-up menus as well.  The
default for system tray and pop-up menus is to only place icons in the
generated menus when the B<--format> also supports icons (to mimic the
behaviour of the underlying window manager).  When the window manager
B<--format> does not support a root menu, (e.g. L<dwm(1)>), icons will
be added to the menu.

=item B<--theme>, B<-t> I<THEME>

Specify the icon theme name to use when generating icons.  The default
is to obtain the icon theme name from the default locations (such as the
F<$HOME/.gtk2rc-2.0> file).

=item B<--style>, B<-s> I<STYLE>

Specify which format of window manager menu specification output to
generate.  I<STYLE> can be one of the following:

=over

=item I<fullmenu>

The default: output a full menu suitable for use as the root menu
specification for the window manager.

=item I<appmenu>

Output a complete menu; however, only output the applications portion of
the menu (no styles, window manager controls, logout, etc.), suitable to
reference as an "Applications" menu.

=item I<entries>

Only output the entries for the menu but not the enclosing menu itself:
this is useful for some pipe menu commands.

=back

This option does not affect the system tray nor pop-up menus.

=item B<--launch>, B<-L>, B<--nolaunch>

Specifies whether to use B<xde-launch(1)> to launch the desktop files
directly or not.  This option will only be honoured when the
L<xde-launch(1)> program is available and accessible.

=item B<--menu>, B<-M> I<MENU>

Specifies the filename stem of the root menu filename.  The default is
F<applications>.  Another useful value is F<system>.  This option only
affects the automatic determination of the root menu file.  When the
root menu file is specified with the B<--root-menu> option, the filename
is determined verbatim.

=head2 POP-UP MENU OPTIONS

The following options are only valid then the B<--popup> command option
has been specified or implied.  These options only affect the pop-up
menu.

=over

=item B<--screen>, B<-s> I<SCREEN>

Specify the screen number to use when positioning the menu.  The default
is either specified by the B<DISPLAY> environment variable (when that
variable specifies a screen); otherwise, all screens will be considered.

=item B<--button>, B<-b> I<BUTTON>

Specifies the button that was used to invoke the pop-up.  Defaults to
zero (0).  This should be button that was used to pop the menu.  A
window manager that invokes this command in response to a button press
should release its passive grab on the button before invoking the pop-up
menu so that the popped up menu can grab the button.  A I<BUTTON> of
zero (0) means that the program was invoked with a key-press instead of
a button.

=item B<--timestamp>, B<-T> I<TIMESTAMP>

Provides the X11 server time-stamp of the event that caused the pop-up.

=item B<--where>, B<-W> {B<pointer>|B<center>|B<topleft>}

Specifies the position for the pop-up menu.  This can be one of the
following values (case insensitive, may be abbreviated):

=over

=item C<pointer>

Place the northwest corner of the menu under the mouse pointer.  This
will always succeed.  This is the default when B<--button> is specified
and non-zero.

=item C<center>

Place the menu in the centre of the root window on the current screen
and monitor.  This is the default when B<--button> is unspecified or
zero.

=item C<topleft>

Place the menu in the top-left corner of the current screen and monitor
work area (considering panels and docks).

=back

When unspecified, the default placement algorithm is as follows:

=over

=item 1.

If B<--button> is specified and non-zero, place the menu at the pointer
regardless of the screen and monitor currently containing the pointer.
If the pointer is positioned outside an active monitor, fall-back to the
behaviour as if B<--button> was not specified.

=item 2.

If B<--button> is unspecified or zero, place the menu in the centre
(considering work area) of the screen and monitor which currently
contains the keyboard focus.

=back

=back

=item B<--dmenu>

This option is only valid in conjunction with the B<--popup> command
option.  It specifies that the menu to pop-up should be a L<dmenu(1)>
style menu for use with dynamic window managers such as L<dwm(1)>.

=head1 USAGE

B<xde-menu> currently uses F<libwnck+> or F<libwnck> both to identify
the window manager and to provide the window manager actions menu.  The
rage and format of window manager actions provided by F<libwnk+> is
superior to F<libwnck>.  This use means that B<xde-menu> does not
currently provide any support for window managers that do not have a
modicum of compliance to the EWMH/NetWM specifications.  That may change
in the future.

=head1 ENVIRONMENT

The following environment variables are significant to the operation of
B<xde-menu>:

=over

=item C<$XDG_CURRENT_DESKTOP>

Specifies the current desktop.  When the B<--format> is not specified,
the format defaults to the value of this environment variable converted
to lower-case.  When the B<--desktop> is not specified, the desktop
defaults to the value of this environment variable.

=item C<$XDG_MENU_PREFIX>

Specifies the prefix to apply to the default menu name to derive the
root menu unless specified with the B<--root-menu> option.  When
unspecified, this variable defaults to a null string.

B<xde-menu> finds the root menu using the following logic:

=over

=item 1.

If a file name is specified using the B<--root-menu> option, (and the
window manager has not changed since B<xde-menu> was launched), that
file name is used as the root menu.

=item 2.

If the window manager has changed since B<xde-menu> was launched, any
B<--root-menu> option that was specified at launch is ignored.

=item 3.

If the file specified by B<--root-menu> is not found or unspecified, the
file name F<${XDG_MENU_PREFIX}applications.menu> is sought in each of
the sub-directories name F<menu> in the path
F<$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS> in accordance with the XDG
menu specification.

Note that the stem F<applications> can be changed using the
B<--menu> option.

=item 4.

If not found, the file name F<applications.menu> is sought in each of
the F<menu> sub-directories in the path
F<$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS> in accordance with the XDG
menu specification.

Note that the stem F<applications> can be changed using the
B<--menu> option.

=back

=item C<$XDG_CONFIG_HOME>

Specifies the XDG configuration directory.  When unspecified, defaults
to F<$HOME/.config> in accordance with XDG specifications.

=item C<$XDG_CONFIG_DIRS>

Specifies the system XDG configuration directories.  When unspecified,
defaults to F</etc/xdg> in accordance with XDG specifications.

=item C<$XDG_DATA_HOME>

Specifies the user XDG data directory.  When unspecified, defaults to
F<$HOME/.local/share> in accordance with XDG specifications.

=item C<$XDG_DATA_DIRS>

Specifies the system XDG data directory search path.  When unspecified,
defaults to F</usr/local/share:/usr/share> in accordance with XDG
specifications.

=item C<$XDG_ICON_THEME>

Specifies the name of the icon theme.  When not specified, the icon
theme will be determined from configuration sources (e.g. the
F<$HOME/.gtkrc-2.0> file)

=back

=head1 PROPERTIES

The following X11 window properties are significant to the operation of
B<xde-menu>>

=over

=item C<_XDE_WM_NAME>

When available and set on the root window, specifies the window manager
name used to derive the B<--format> option when the option was
unspecified or when the window manager has changed since the B<xde-menu>
command was launched.

=item C<_NET_WM_NAME>

When C<_XDE_WM_NAME> is unavailable, and this property is set properly
on the window manager EWMH/NetWM check window, the first word of the
property will be used to derived the B<--format> option when the option
was unspecified or when the window manager has changed wince the
B<xde-menu> command was launched.

=item C<_XDE_WM_STYLE>

When set on the root window or XDE check window, used to determine the
location of the window manager style file.

=item C<_XDE_WM_STYLENAME>

When set on the root window or XDE check window, used to determine the
name of the style set for the window manager.

=item C<_XDE_WM_THEME>

When set on the root window or XDE check window, used to determine the
name of the theme set for XDE.

=item C<_XDE_WM_THEMEFILE>

When set on the root window or XDE check window, used to determine the
file to use for the theme set for XDE.

=back

=head1 HISTORY

B<xde-menu> was written for a number of reasons:

=over

=item 1.

Many existing light-weight window manager generators that read XDG
F<.desktop> files do not conform to the XDG menu generation
specifications and, in particular, are incapable of merging menus.

=item 2.

Existing XDG menu generators (such as the SuSE L<xdg_menu(1)> script) do
not properly merge default merge directories and do not observe
C<E<lt>LayoutE<gt>> commands.  Also, they are poor at including icons in
the generated menus.  They, of course, do not generate system tray nor
pop-up menus either.

=item 3.

Existing XDG menu generators run once and keep cahce information, or
have a C<regenerate> command placed in the menu.  They do not monitor
XDG directories for changes and update menus on changes.

=item 4.

The L<lxpanel(1)> and L<pcmanfm(1)> menu generators do not have any of
the above deficiencies; however, they do not create window manager
specific sub-menus.

=back

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

=head1 SEE ALSO

L<xde-style(1)>

=cut

# vim: set sw=4 tw=72 spell spelllang=en_ca:
