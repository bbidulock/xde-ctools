=pod

=head1 NAME

xde-sound - desktop event sounds for XDE

=head1 SYNOPSIS

B<xde-sound> [I<OPTIONS>]

=head1 DESCRIPTIONS

Provide desktop event sounds as feedback for window managers that do not
provide audio feedback themselves or for those that provide an inferior
feedback.  The audio feedback uses the XDG sound theme specification
with a common set of event identifiers so that they can be themed.  This
package also provides a default C<freedesktop> sound theme.  See the
B<xde-style> and B<xde-theme> packages for more sounds.

B<xde-sound> uses ICCCM, Win/GNOME and Net/EWMH events to generate
sounds.  This includes the appearance and disappearance of a window
manager, so B<xde-sound> should be auto-started in the initialization
phase of the desktop (and a F<.desktop>) file is provided to do this.

=head1 OPTIONS

B<xde-sound> accepts the following options:

=head2 COMMAND OPTIONS

When specified, the following options alter the primary operating mode
of the program:

=over

=item I<unspecified>

When no command option is specified, the default is to run the event
announcer without replacing an existing instance.  It is an error if an
instance is currently running.

=item B<--replace>, B<-r>

Run the event announcer, but replace a running instance of B<xde-sound>.
It is not an error when no instance is currently running.

=item B<--restart>, B<-S>

Ask a running instance to restart.  It is an error if there is not
instance currently running.  This is useful when the binary has been
upgraded.  Note that a muted state of the announcer will be lost.

=item B<--quit>, B<-q>

Ask a running instance of B<xde-sound> to quit.  It is not an error if
no instance is currently running.

=item B<--mute>, B<-M>

Ask a running instance of B<xde-sound> to mute itself.  It is not an
error if there is no instance running or if a running instance is
already muted.

=item B<--unmute>, B<-U>

Ask a running instance of B<xde-sound> to unmute itself.  It is not an
error if a running instance is already unmuted; however, it is
considered an error when there is no instance running.

=item B<--help>, B<-h>

Prints usage information and the current options settings and defaults
then exits.

=item B<--version>, B<-V>

Prints the version of the program and a brief copyright statement and
exits.  Parse the first line with L<awk(1)> to obtain just the version
number.

=item B<--copying>, B<-C>

Prints the long copying permission statement and exits.

=back

=head2 GENERAL OPTIONS

The following options are general options:

=over

=item B<--display>, B<-d> I<DISPLAY>

Specify the display to use (overriding the B<DISPLAY> environment
variable).  The default is the value of the B<DISPLAY> environment
variable.

=item B<--screen>, B<-s> I<SCREEN>

Specify the screen number to use when locating the current window and
workspace.  The default is either specified by the B<DISPLAY>
environment variable (when that variable specifies a screen);
otherwise, all screens will be considered.

=item B<--theme>, B<-t> I<THEME>

Specify the sound theme to use.

=item B<--verbose>, B<-v> [I<LEVEL>]

Print extra information on standard error while running.  When
I<LEVEL> is not specified, simply increments the output verbosity;
otherwise, the output verbosity is set to I<LEVEL>.

=item B<--debug>, B<-D> [I<LEVEL>]

Print debugging information on standard error while running.  When
I<LEVEL> is not specified, simply increments the debug level; otherwise,
the debug level is set to I<LEVEL>.

=back

=head2 SESSION MANAGEMENT OPTIONS

X session management options are not used by another user other than the
X11 Session Manager.  The following options are used by X session
management:

=over

=item B<-clientId> I<CLIENTID>

Specifies the X Session Management client identifier of the previously
running session of B<xde-sound>.

=item B<-restore> I<SAVEFILE>

Specifies the X Session Management file name of a file to which to save
session information.

=back

=head1 USAGE

B<xde-sound> currently uses F<libwnck+> or F<libwnck> to detect window
and workspace changes and to provide the audio feedback, so the window
manager must support some modicum of EWMH/NetWM compliance for the
feedback to be effective.  Eventually I might make F<libwnck+> support
GNOME1/WinWM, OSF/Motif and even just ICCCM compliant window managers,
but, for now, some EWMH/NetWM compliance is needed.

Run B<xde-sound> in the background or launch using the supplied XDG
autostart file.  The program takes the following steps:

=over

=item 1.

When run before the window manager, waits for a window manager to
appear, applications to be launched, windows or workspaces to be
manipulated, changes in focus, desktops, primary screen changes.

=item 2.

When an event is detected, it plays the appropriate sound (when one
exists) in the currently selected sound theme.

=back

=head1 BEHAVIOR

The purpose of B<xde-sound> is to invoke XDG sound theme events that are
the responsibility of the window manager.  Actions and input feedback
associated with GUI elements (e.g: buttons, menus) are the
responsibility of the GUI toolkit and are not detected nor invoked by
B<xde-sound>.  Notifications associated with system facilities (e.g.:
battery level, CPU temperature) are the responsibility of system
facilities and are also not detected nor invoked by B<xde-sound>.

Because there are action sound events typically associated with window
manager actions (such as those provided for L<vtwm(1)> and L<fvwm(1)>)
that are not represented in the standard event names provided by the XDG
sound naming specification, and, because not many sound themes implement
all of the standard ones anyway, it is necessary for B<xde-sound> to
interrogate the extent of support for sounds in the current theme and
potentially choose supported sounds to apply to unsupported actions.

=head2  EVENTS

B<xde-sound> detects the following events and takes the described
actions:

=over

=item WM_S[n]

When ownership change of the C<WM_S[n]> manager selection is detected,
it is assumed that a new window manager has appeared and the appropriate
sound is played.

=item WnckWindow Signals

The following WnckWindow changes are supported:

=over

=item actions-changed

Emitted when the action availabilities for window change.

=item geometry-changed

Emitted when the geometry of window changes.

=item icon-changed

Emitted when the icon of window changes.

=item name-changed

Emitted when the name of window changes.

=item state-changed

Emitted when the state of window changes.  This can happen when window
is (un)minimized, (un)maximized, (un)sticked, (un)shaded, (un)made
above, (un)made below, (un)set fullscreen, when it needs attention, etc.

=over

=item minimized

=over

=item I<window-minimized>

=item I<window-unminimized>

=back

=item maximized horizontally

=over

=item I<window-maximized-horizontal>

=item I<window-unmaximized-horizontal>

=back

=item maximized vertically

=over

=item I<window-maximized-vertical>

=item I<window-unmaximized-vertical>

=back

=item shaded

=over

=item I<window-slide-out-shade>

=item I<window-slide-in-unshaded>

=back

=item skip pager

=item skip tasklist

=over

=item no sound

=back

=item sticky

=over

=item I<window-stick>

=item I<window-unstick>

=back

=item hidden

=over

=item I<window-minimized-hidden>

=item I<window-unminimized-hidden>

=back

=item full screen

=over

=item I<window-maximized-fullscreen>

=item I<window-unmaximized-fullscreen>

=back

=item demands attention

=over

=item I<window-attention-active>

=item I<window-attention-inactive>

=back

=item urgent

=over

=item I<window-urgent>

=back

=item above

=over

=item I<window-raise-above>

=back

=item below

=over

=item I<window-lower-below>

=back

=item focused

=over

=item I<window-inactive-click>

=back

=item modal

=item fixed

=over

=item no sound

=back

=item filled

=over

=item I<window-maximized-filled>

=item I<window-unmaximized-unfilled>

=back

=item floating

=over

=item I<window-unstick-float>

=item I<window-stick-unfloat>

=back

=item undecorated

=over

=item I<window-undecorated>

=item I<window-decorated>

=item

=back

=back

=item workspace-changed

Emitted when the current workspace of window changes, or if window has
been pinned or unpinned.

=over

=item I<window-stick-pinned>

=item I<window-unstick-unpinned>

=item I<window-slide-in-taketo>

=item I<window-slide-out-sendto>

=back

Unfortunately, F<libwnck> cannot directly detect the unpinning of a window.

=back

=item WnckScreen Signals

=over

=item active-window-changed

Emitted when the active window on screen has changed.

=over

=item I<window-switch>

=back

=item active-workspace-changed

Emitted when the active workspace on screen has changed.

=over

=item I<desktop-switch-up>, I<desktop-switch-left> (I<desktop-switch-left-up>?)

=item I<desktop-switch-down>, I<desktop-switch-right> (I<desktop-switch-right-down>?)

=item I<desktop-switch-left>

=item I<desktop-switch-right>

=item

=back

=item application-closed

Emitted when a WnckApplication is closed on screen.

=item application-opened

Emitted when a new WnckApplication is opened on screen.

=item background-changed

Emitted when the background on the root window of screen has changed.

=item class-group-closed

Emitted when a WnckClassGroup is closed on screen.

=item class-group-opened

Emitted when a WnckClassGroup is opened on screen.

=item showing-desktop-changed

Emitted when "showing the desktop" mod of screen is toggled.

=over

=item I<desktop-showing>

=item I<desktop-showing-showall>

=item I<desktop-showing-hideall>

=item

=back

=item viewports-changed

Emitted when a viewport position has changed in a WnckWorkspace of
screen or when WnckWorkspace of screen gets or loses its viewport.

=item window-closed

Emitted when a WnckWindow is closed on screen.

=over

=item I<window-close>

=item

=back

=item window-manager-changed

Emitted when the window manager on screen has changed.

=over

=item I<desktop-login>

=item I<desktop-logout>

=item

=back

=item window-opened

Emitted when a new WnckWindow is opened on screen.

=over

=item I<window-new>

=item

=back

=item window-stacking-changed

Emitted when the stacking order of WnckWindow on screen has changed.

=over

=item I<window-stack-raise>

=item I<window-stack-lower>

=item

=back

=item workspace-created

Emitted when a WnckWorkspace is created on screen.

=over

=item I<workspace-created>, I<desktop-created>

=item

=back

=item workspace-destroyed

Emitted when a WnckWorkspace is destroyed on screen.

=over

=item I<workspace-destroyed>, I<desktop-destroyed>

=item

=back

=back

=item X Window Root Properties

Most root properties are already handled adequately by F<libwnck>:
B<_NET_ACTIVE_WINDOW>, B<_NET_CLIENT_LIST_STACKING>,
B<_NET_CLIENT_LIST>, B<_NET_CURRENT_DESKTOP>, B<_NET_DESKTOP_GEOMETRY>,
B<_NET_DESKTOP_LAYOUT>, B<_NET_DESKTOP_NAMES>, B<_NET_DESKTOP_VIEWPORT>,
B<_NET_NUMBER_OF_DESKTOPS>, B<_NET_SHOWING_DESKTOP>.
However, the following root properties provide some addition
information:

=over

=item B<_NET_DESKTOP_MODES>

The property describes, using an array of atoms, the desktop window
arrangement (layout) mode of each of the current desktops under window
manager control.  This is an extension for tiling window managers to the
NetWM/EWMH window manager specification.  It can be used to detect
changes to the mode of the active desktop.

=over

=item I<desktop-mode>

=item I<desktop-mode=floating>

=item I<desktop-mode-grid>

=item I<desktop-mode-monocle>

=item I<desktop-mode-tiled>

=item I<desktop-mode-tiled-left>

=item I<desktop-mode-tiled-right>

=item I<desktop-mode-tiled-top>

=item I<desktop-mode-tiled-bottom>

=item

=back

=item B<_NET_MONITOR_GEOMETRY>

Changes when the geometry (or resolution) of a monitor on the screen
changes.

=item B<_NET_WORKAREA>

Changes when the size and position of the work area on the desktop
changes.

=over

=item I<desktop-workarea-resized>

=item I<desktop-workarea-resized-expanded>

=item I<desktop-workarea-resized-shrunk>

=item

=back

=back

=item X Window Client Properties

=over

=item B<_NET_FRAME_EXTENTS>

Changes when the decorations change on the client window.

=over

=item I<window-decorated>

=item I<window-undecorated>

=item

=back

=item B<_NET_WM_ALLOWED_ACTIONS>

=item B<_NET_WM_DESKTOP>

=item B<_NET_WM_DESKTOP_MASK>

=item B<_NET_WM_ICON>

=item B<_NET_WM_ICON_GEOMETRY>

=item B<_NET_WM_ICON_NAME>

=item B<_NET_WM_MOVERESIZE>

=item B<_NET_WM_NAME>

=item B<_NET_WM_PID>

=item B<_NET_WM_STATE>

=item B<_NET_WM_SYNC_REQUEST_COUNTER>

=item B<_NET_WM_USER_TIME_WINDOW>

=item B<_NET_WM_VISIBLE_ICON_NAME>

=item B<_NET_WM_VISIBLE_NAME>

=item B<_NET_WM_WINDOW_TYPE>

=back

=back

=head2 STANDARD SOUND NAMES

For a full list of standard and extended event identifier names for
which sounds are defined, see the L<sound(7)> manual page from the
L<xde-sounds(5)> package.  Following is a list of event identifier names
used by the B<xde-sound> program, and by other programs in the
L<xde-ctools(5)> suite.  See also the L<xde-applets(5)> package for
additional support for the full standard sound theme (I<battery-low>,
I<battery-caution>, I<power-plug>, I<power-unplug>,
I<power-unplug-battery-low> for example).

=over

=item Alerts

This is to notify the user of an action or event which may have a major
impact on the system or their current use case.

=over

=item network-connectivity-lost

"The sound used when network connectivity is lost."
Provides an audible indication to the user that network connectivity
that was previously established has now been lost.  Activities that rely
on network connectivity will cease, so this is a major change in the
use case for the device, thus, this alert.

B<Spoken words:>
"Network connectivity lost."

=item network-connectivity-error

"The sound used when an error occurs when it is tried to initialize the
network connection of the computing device."
Provides an audible indication to the user that network connectivity
that is normally automatically established has encountered an error.
Activities that rely on network connectivity cannot start or proceed, so
this is a major change in the use case for the devices, thus, this
alert.

B<Spoken words:>
"Network connectivity error."

=item dialog-error

"The sound use when a dialog is opened to explain an error condition to
the user."

B<Spoken words:>
"Error dialog."

=item B<dialog-error-critical>

"Common sound used when a dialog is opened to explain a critical error
condition to the user."

B<Spoken words:>
"Critical error dialog."

=item B<dialog-error-serious>

"Common sound used when a dialog is opened to explain a serious error
condition to the user."

B<Spoken words:>
"Serious error dialog."

=item battery-low

"The sound used when the battery is low (below 20%, for example)."
This event sound is played when the battery is low (below 20%, for
example).  B<xde-sound> only plays battery event sounds when
L<xde-up-applet(1)> is not running (C<_XDE_UP_APPLET_S%d> manager
selection is missing).

=item suspend-error

"The machine failed to suspend."

=item software-update-urgent

"The sound use when an urgent update is available through the system
software update program."

=item power-unplug-battery-low

"The power cable has been unplugged and the battery level is low."

This event sound is played when the power is unplugged and the battery
is still low.  B<xde-sound> only plays battery event sounds when
L<xde-up-applet(1)> is not running (C<_XDE_UP_APPLET_S%d> manager
selection is missing).

=item B<thermal-hot>

"The sound used when the computer or device has become hot (above 90% of
thermal limits, for example)."
Most mobile systems have limited thermal cooling capability under some
circumstances (vents blocked, for example) and will automatically
power-off to protect the CPU and other electronic components once
temperatures reach a critical level.  Provides an audible indication to
the user of an impending automatic power-down.

B<Spoken words:>
"Device hot! Device hot! Device hot!"

=item B<desktop-session-restore-failed>

"The sound used when saving a desktop session failed."

B<Spoken words:>
"Session save failed."

=item B<desktop-session-save-failed>

"The sound used when the restoration of a desktop session fails."

B<Spoken words:>
"Session restoration failed."

=back

=item Notifications

This is to alert the user that the system, or their current use case,
has changed state in some way - new email arriving, new non-critical
update to an application available.

=over

=item B<message-new>

The sound used when a new message is received.

B<Spoken words:>
New message.

=item message-new-instant

"The sound used when a new IM is received."

B<Spoken words:>
"New instant message."

=item message-new-email

"The sound used when a new email is received."

B<Spoken words:>
"New Email message."

=item B<message-new-voicemail>

"The sound used when a new voicemail is received."

B<Spoken words:>
"New Voicemail message."

=item B<complete>

"Common sound used when an action is complete."

B<Spoken words:>
"Action complete."

=item B<complete-media>

"The sound used when an optical medium completed processing."

B<Spoken words:>
"Optical medium processing complete."

=item complete-media-burn

"The sound used when an optical medium completed burning."

B<Spoken words:>
"Optical medium burning complete."

=item complete-media-rip

"The sound used when an optical medium completed ripping."

B<Spoken words:>
"Optical medium ripping complete."

=item complete-download

"The sound used when a file completed downloading."

B<Spoken words:>
"File download complete."

=item complete-copy

"The sound used when a file completed copying."

B<Spoken words:>
"File copy complete."

=item complete-scan

"The sound used when a scanner completed image acquisition and software
completed image processing."

B<Spoken words:>
"Scanner completed image acquisition."

=item B<complete-print>

"Common sound used when a file has completed printing."

B<Spoken words:>
"File print complete."

=item phone-incoming-call

"The sound used when a phone/VOIP call is coming in.  Usually some kind
of ring sound."

B<Spoken words:>
"Incoming phone call."

=item phone-outgoing-busy

"The sound used when a phone/voip call is dialed out and the responder is
not available."

B<Spoken words:>
"Outgoing phone call busy."

=item phone-hangup

"The sound used when a phone/voip call is ended due to hangup."

B<Spoken words:>
"Phone hung up."

=item phone-failure

"The sound used when a phone/voip call is cancelled due to some error."

B<Spoken words:>
"Phone call cancelled due to error."

=item network-connectivity-established

"The sound used when network connectivity is established."

B<Spoken words:>
"Network connectivity established."

=item system-bootup

"The sound used when the computer is being booted up, played as early in
bootup as possible."

B<Spoken words:>
"Initiating startup sequence."

=item system-ready

"The sound used when the computer is booted up and shows the login
screen."

B<Spoken words:>
"Ready for system log in."

=item system-shutdown

"The sound used when the computer is being shut down."

B<Spoken words:>
"Initiating shutdown sequence."

=item system-shutdown-reboot

An extension to XDG sound naming specification used by libcanberra when
the computer is being shut down for reboot.

B<Spoken words:>
"Initiating restart sequence."

=item search-results

"The sound used when one or more search results are returned."

B<Spoken words:>
"Search results returned."

=item search-results-empty

"The sound used when no search results are returned."

B<Spoken words:>
"No search results returned."

=item desktop-login

"The sound used when the user logs into the system, played as a welcome
sound immediately after the login screen disappeared."

This could be performed by systemd user unit.
This could also be implemented as an autostart F<.desktop> entry, or can be
performed by B<xde-sound> itself on startup.

B<Spoken words:>
"Welcome to the X desktop environment."

=item desktop-logout

"The sound used when a user logs out of the system."

This could be performed by systemd user unit.
This could also be performed by B<xde-sound> itself on exit.

B<Spoken words:>
"Logging out of the X desktop environment."

=item desktop-screen-lock

"The sound used when the user locks their current session."

B<Spoken words:>
"Screen locked."

=item B<desktop-screen-unlock>

"Common sound used when the user unlocks their current session."

B<Spoken words:>
"Screen unlocked."

=item service-login

"The sound used when a user logs into a service (i.e. Gaim login)."

B<Spoken words:>
"User logged into service."

=item service-logout

"The sound used when a user logs out of a service (i.e. Gaim logout)."

B<Spoken words:>
"User logged out of service."

=item battery-caution

"The sound used when the batter is nearing exhaustion (below 40%, for
example)."

This event sound is played when the battery is critically low.
B<xde-sound> only plays battery event sounds when L<xde-up-applet(1)> is
not running (C<_XDE_UP_APPLET_S%d> manager selection is missing).

B<Spoken words:>
"Caution battery nearing exhaustion."

=item battery-full

"The sound used when the batter is fully loaded up."
This event sound is played when the battery is full.  B<xde-sound> only
plays battery event sounds when L<xde-up-applet(1)> is not running
(C<_XDE_UP_APPLET_S%d> manager selection is missing).

B<Spoken words:>
"Battery is fully charged."

=item B<thermal-caution>

"The sound to use when the computer or device has heated up (above 80% of
thermal limits, for example)."

B<Spoken words:>
"Device has Heated Up."

=item B<thermal-cool>

"The sound to use when the computer or device has cooled down (below 20%
of thermal limits, for example)."

B<Spoken words:>
"Device has Cooled Down."

=item dialog-warning

"The sound used when a dialog is opened to give information to the user
that may be pertinent to the requested action."

B<Spoken words:>
"Warning dialog."

=item dialog-information

"The sound used when a dialog is opened to give information to the user
that may be pertinent to the requested action."

B<Spoken words:>
"Information dialog."

=item dialog-question

"The sound used when a dialog is opened to ask the user a question."

B<Spoken words:>
"Question dialog."

=item software-update-available

"The sound used when an update has become available for software
installed on the computing device, through the system software update
program."

B<Spoken words:>
"A software update is available through the system software update program."

=item device-added

"The sound used when a device has become available to the desktop, i.e.
due to USB plugging."

B<Spoken words:>
"Device added."

=item device-removed

"The sound used when a device has become unavailable to the desktop,
i.e. due to USB unplug."

B<Spoken words:>
"Device removed."

=item window-new

"The sound used when a new window or dialog is opened."

This sound can be driven by the C<window-opened> 
B<WnckScreen> signal.

B<Spoken words:>
"New window opened."

=item B<window-close-kill>

"The sound used when an existing window is killed."

B<Spoken words:>
"Window killed."

=item B<window-close-kill-process>

"The sound used when an existing window is killed by process identifier."

B<Spoken words:>
"Window killed by process identifier."

=item B<window-close-kill-server>

"The sound used when an existing window is killed by the windowing system server."

B<Spoken words:>
"Window killed by server."

=item B<window-ping>

"The sound used when an existing window is pinged on the windowing
system server to determine whether it's application is still
responsive."

B<Spoken words:>
"Window pinged."

=item power-plug

"The power cable has been plugged in."

This event sound is played when the power is plugged.  B<xde-sound> only
plays power event sounds when L<xde-up-applet(1)> is not running
(C<_XDE_UP_APPLET_S%d> manager selection is missing).

B<Spoken words:>
"The power cable has been plugged in."

=item power-unplug

"The power cable has been unplugged."

This event sound is played when the power is unplugged.  B<xde-sound> only
plays power event sounds when L<xde-up-applet(1)> is not running
(C<_XDE_UP_APPLET_S%d> manager selection is missing).

B<Spoken words:>
"The power cable has been unplugged."

=item suspend-start

"The machine is about to suspend."

B<Spoken words:>
"Machine suspending."

=item suspend-resume

"The machine has returned from suspended state."

B<Spoken words:>
"Machine returned from suspended state."

=item lid-open

"The lid has been opened (for laptops, mobile devices)."

B<Spoken words:>
"Lid opened."

=item lid-close

"The lid has been closed (for laptops, mobile devices)."

B<Spoken words:>
"Lid closed."

=item alarm-clock-elapsed

"A user configured alarm elapsed."

B<Spoken words:>
"Alarm clock elapsed."

=item B<window-attention>

"Common sound used when a window demands attention."

B<Spoken words:>
"Window requires attention."

=item window-attention-active

"An active/visible window demands attention."

This sound can be driven by a I<demands attention> or I<urgent> state
change in response to a C<state-changed> B<WnckWindow> signal.

B<Spoken words:>
"Active window requires attention."

=item window-attention-inactive

"An inactive/invisible window demands attention."

This sound can be driven by a I<demands attention> or I<urgent> state
change in response to a C<state-changed> B<WnckWindow> signal.

B<Spoken words:>
"Inactive window requires attention."

=item window-urgent

An extension to the XDG sound naming specification for when a window is
marked as urgent.

B<Spoken words:>
"Urgent window."

=item B<desktop-session-create>

"The sound used when a new desktop session is created."

B<Spoken words:>
"Session created."

=item B<desktop-session-save>

"The sound used when a desktop session is saved."

B<Spoken words:>
"Session saved."

=item B<desktop-session-checkpoint>

"The sound used when a desktop session is check-pointed."

B<Spoken words:>
"Session check-point."

=item B<desktop-session-restore>

"The sound used when a desktop session is restored."

B<Spoken words:>
"Session restored."

=item B<desktop-layout-changed>

"The sound used when the desktop layout (rows and columns) changes."

B<Spoken words:>
"Desk top layout changed."

=item B<screen-brighter>

"The sound used when the device screen is made brighter."

B<Spoken words:>
"Screen brighter."

=item B<screen-darker>

"The sound used when the device screen is made darker."

B<Spoken words:>
"Screen darker."

=item B<window-manager-reload>

"The sound used when the window manager reloads."

B<Spoken words:>
"Window manager reloading."

=item B<window-manager-start>

"The sound used when the window manager starts."

B<Spoken words:>
"Window manager starting."

=back

=item Actions

Action sounds are use as feedback for user operations.

=over

=item phone-outgoing-calling

"The sound used when a phone/VOIP call is dialed out."

B<Spoken words:>
"Outgoing phone call in progress."

=item message-sent-instant

"The sound used when a new IM is sent."

B<Spoken words:>
"Instant message sent."

=item message-sent-email

"The sound used when a new email is sent."

B<Spoken words:>
"Email message sent."

=item bell-terminal

"The sound to use as a terminal bell."

B<Spoken words:>
"Terminal bell."

=item bell-window-system

"The sound to use as a generic bell for X11 or other window systems."

B<Spoken words:>
"Window system bell."

=item trash-empty

"The sound used when the user empties the trash."

B<Spoken words:>
"Trash emptied."

=item item-deleted

"The sound used when an item is deleted."

B<Spoken words:>
"Item deleted."

=item file-trash

"The sound used when a file or folder is sent to the trash."

B<Spoken words:>
"File or folder sent to trash."

=item camera-shutter

"A photo has been shot."

B<Spoken words:>
"Say "Cheese"!"

=item camera-focus

"A camera has the focus."

B<Spoken words:>
"Camera focus."

=item screen-capture

"A screenshot was made."

This needs to be done by the screenshot application.

B<Spoken words:>
"Screen capture initiated."

=item B<screen-capture-complete>

"Common sound used when a screen capture completes."

B<Spoken words:>
"Screen capture complete."

=item count-down

"A countdown (e.g. for a photo shooting) sound that is repeated each
second."

B<Spoken words:>
"Counting down."

=item completion-success

"A text completion was attempted and was successful."

B<Spoken words:>
"Text completion attempt successful."

=item completion-fail

"A text completion was attempted and was not successful."

B<Spoken words:>
"Text completion attempt not successful."

=item completion-partial

"A text completion was attempted and was partially successful."

B<Spoken words:>
"Text completion attempt partially successful."

=item completion-rotation

"A text completion was attempted and the list of available options
reached the end and completion started from the beginning."

B<Spoken words:>
"Text completion attempt available options restarting."

=item audio-volume-change

"The test sound that is used to make volume changes noticeable by the
user when he uses a volume slider."

B<Spoken words:>
"Volume change."

=item audio-channel-left

"The test sound for identifying the left speaker.  A mono file with a
voice saying 'left'."

B<Spoken words:>
"Left."

=item audio-channel-right

"The test sound for identifying the right speaker.  A mono file with a
voice saying 'right'."

B<Spoken words:>
"Right."

=item audio-channel-front-left

"The test sound for identifying the front-left speaker.  A mono file with a
voice saying 'front left'."

B<Spoken words:>
"Front left."

=item audio-channel-front-right

"The test sound for identifying the front-right speaker.  A mono file with a
voice saying 'front right'."

B<Spoken words:>
"Front right."

=item audio-channel-front-center

"The test sound for identifying the front-center speaker.  A mono file with a
voice saying 'front center'."

B<Spoken words:>
"Front center."

=item audio-channel-rear-left

"The test sound for identifying the rear-left speaker.  A mono file with a
voice saying 'rear left'."

B<Spoken words:>
"Rear left."

=item audio-channel-rear-right

"The test sound for identifying the rear-right speaker.  A mono file with a
voice saying 'rear right'."

B<Spoken words:>
"Rear right."

=item audio-channel-rear-center

"The test sound for identifying the rear-center speaker.  A mono file with a
voice saying 'rear center'."

B<Spoken words:>
"Rear center."

=item audio-channel-lfe

"The test sound for identifying the lfe/subwoofer speaker.  A mono file with a
voice saying 'subwoofer', alternatively a low frequency noise."

B<Spoken words:>
"Sub-woofer."

=item audio-channel-side-left

"The test sound for identifying the side-left speaker.  A mono file with a
voice saying 'side left'."

B<Spoken words:>
"Side left."

=item audio-channel-side-right

"The test sound for identifying the side-right speaker.  A mono file with a
voice saying 'side right'."

B<Spoken words:>
"Side right."

=item audio-test-signal

"The test sound for testing audio."

B<Spoken words:>
"Test signal."

=item B<desktop-created>

"Common sound used when a new desktop is created."

B<Spoken words:>
"Desktop created."

=item B<desktop-destroyed>

"Common sound used when a desktop is destroyed."

B<Spoken words:>
"Desktop destroyed."

=item B<workspace-created>

"The sound used when a workspace is created on the screen."

B<Spoken words:>
"Work space created."

=item B<workspace-destroyed>

"The sound used when a workspace is destroyed on the screen."

B<Spoken words:>
"Work space destroyed."

=item B<window-manager-quit>

"The sound used when the window manager quits.  See also
desktop-logout."

B<Spoken words:>
"Window manager shutting down."

=item B<window-manager-restart>

"The sound used when the window manager restarts."

B<Spoken words:>
"Window manager restarting."

=back

=item Input Feedback

Actions sounds are used as feedback for user input events, such as mouse
clicks, or key presses.  In contrast to the sounds listed in L</Actions>,
these sounds contain much less context information and are solely used
to give the user audible feedback to input events the user himself
directly caused.

=over

=item window-close

"The sound used when an existing window is closed."

This sound can be triggered by the C<window-closed> B<WnckScreen>
signal.

B<Spoken words:>
"Window closed."

=item B<window-slide>

"The sound used when a window is slid."

B<Spoken words:>
Window slided.

=item window-slide-in

"The sound used when a window is slided in by some means. Example: panel."

I suppose this is for things like auto-hiding panels and docks.
This is rather hard to detect.  Perhaps restacking of a window of a
particular type (desktop layer).

B<Spoken words:>
"Window slided in."

=item window-slide-out

"The sound used when a window is slided out by some means. Example: panel."

I suppose this is for things like auto-hiding panels and docks.
This is rather hard to detect.  Perhaps restacking of a window of a
particular type (desktop layer).

B<Spoken words:>
"Window slided out."

=item window-slide-out-shade

An extension to the XDG sound naming specification.  Used when a window
is shaded.
Falls back to I<window-slide-out>.

B<Spoken words:>
"Window shaded."

=item window-slide-in-unshade

An extension to the XDG sound naming specification.  Used when a window
is unshaded.
Falls back to I<window-slide-in>.

B<Spoken words:>
"Window unshaded."

=item window-slide-out-sendto

An extension to the XDG sound naming specification.  Used when a window
is sent to another workspace.
Falls back to I<window-slide-out>.

=item window-slide-in-taketo

An extension to the XDG sound naming specification.  Used when a window
is taken to another workspace.
Falls back to I<window-slide-in>.

=item window-stick

An extension to the XDG sound naming specification.  Used when a window
is stuck to the viewport.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<sticky> state.

=item window-unstick

An extension to the XDG sound naming specification.  Used when a window
is unstuck from the viewport.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<sticky> state.

=item window-stick-unfloat

An extension to the XDG sound naming specification.  Used when a window
is allowed to float in a tiling layout.
Falls back to I<window-stick>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<floating> state.

=item window-unstick-float

An extension to the XDG sound naming specification.  Used when a window
is not allowed to float in a tiling layout.
Falls back to I<window-unstick>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<floating> state.

=item window-stick-pinned

An extension to the XDG sound naming specification.  Used when a window
is pinned to all workspaces.
Falls back to I<window-stick>.
This sound can be triggered by the C<workspace-changed> B<WnckWindow>
signal with a change to the pinned status.

=item window-unstick-unpinned

An extension to the XDG sound naming specification.  Used when a window
is unpinned from all workspaces.
Falls back to I<window-unstick>.

=item window-minimized

"The sound used when an existing window is minimized."

This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<minimized> state.

=item window-unminimized

"The sound used when an existing window is unminimized."

This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<minimized> state.

=item window-minimized-hidden

An extension to the XDG sound naming specification.
Used when a window is hidden.
Falls back to I<window-minimized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<hidden> state.

=item window-unminimized-unhidden

An extension to the XDG sound naming specification.
Used when a window is unhidden.
Falls back to I<window-unminimized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<hidden> state.

=item window-decorated

An extension to the XDG sound naming specification.
Used when a window is decorated.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<decorated> state.

=item window-undecorated

An extension to the XDG sound naming specification.
Used when a window is undecorated.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<decorated> state.

=item window-maximized

"The sound to use when an existing window is maximized."

This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<maximized_horizontally> or
I<maximized_vertically> state.

=item window-unmaximized

"The sound to use when an existing window is unmaximized."

This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<maximized_horizontally> or
I<maximized_vertically> state.

=item window-maximized-vertical

An extension to the XDG sound naming specification.
Used when a window is maximized in the vertical direction only.
Falls back to I<window-maximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<maximized_vertically> state.

=item window-unmaximized-vertical

An extension to the XDG sound naming specification.
Used when a window is unmaximized in the vertical direction only.
Falls back to I<window-unmaximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<maximized_vertically> state.

=item window-maximized-horizontal

An extension to the XDG sound naming specification.
Used when a window is maximized in the horizontal direction only.
Falls back to I<window-maximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<maximized_horizontally> state.

=item window-unmaximized-horizontal

An extension to the XDG sound naming specification.
Used when a window is unmaximized in the horizontal direction only.
Falls back to I<window-unmaximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<maximized_horizontally> state.

=item window-maximized-left

An extension to the XDG sound naming specification.
Used when a window is maximized in the left half of the screen.
Falls back to I<window-maximized>.

=item window-unmaximized-left

An extension to the XDG sound naming specification.
Used when a window is unmaximized from the left half of the screen.
Falls back to I<window-unmaximized>.

=item window-maximized-right

An extension to the XDG sound naming specification.
Used when a window is maximized in the right half of the screen.
Falls back to I<window-maximized>.

=item window-unmaximized-right

An extension to the XDG sound naming specification.
Used when a window is unmaximized from the right half of the screen.
Falls back to I<window-unmaximized>.

=item window-maximized-fullscreen

An extension to the XDG sound naming specification.
Used when a window is maximized to fullscreen.
Falls back to I<window-maximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<fullscreen> state.

=item window-unmaximized-fullscreen

An extension to the XDG sound naming specification.
Used when a window is unmaximized from fullscreen.
Falls back to I<window-unmaximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<fullscreen> state.

=item window-maximized-filled

An extension to the XDG sound naming specification.
Used when a window is maximized to filling available area.
Falls back to I<window-maximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<filled> state.

=item window-unmaximized-unfilled

An extension to the XDG sound naming specification.
Used when a window is unmaximized from filling available area.
Falls back to I<window-unmaximized>.
This sound can be triggered by the C<state-changed> B<WnckWindow> signal
with a change in the I<filled> state.

=item window-inactive-click

"Sound used when the user clicks on an inactive window."

This sound can perhaps be triggered by the C<state-changed>
B<WnckWindow> signal with a change in the I<focused> state.

=item window-move-start

"A window move started."

This sound can be played when a C<_NET_WM_MOVERESIZE> client message is
received on the root window that specifies C<_NET_WM_MOVERESIZE_MOVE> or
C<_NET_WM_MOVERESIZE_MOVE_KEYBOARD>.
Unfortunately, this only handles move initiated by pager and panel,
but not by the window manager itself.

An enhancement was made to L<adwm(1)> to place a C<_NET_WM_MOVERESIZE>
property on a window while being moved or resized indicating the nature
of the move or resize of the window.  The presence of this property can
be used to play this sound.

=item window-move-end

"A window move ended."

This sound can be played when a C<_NET_WM_MOVERESIZE> client message is
received on the root window that specifies C<_NET_WM_MOVERESIZE_CANCEL>
(and a move initiation was previously received).
Unfortunately, this only handles move initiated by pager and panel,
but not by the window manager itself.  It also only handles move
cancellation and not completion.

An enhancement was made to L<adwm(1)> to place a C<_NET_WM_MOVERESIZE>
property on a window while being moved or resized indicating the nature
of the move or resize of the window.  The presence of this property can
be used to play this sound.

=item B<window-move-end-cancel>

"A window move was cancelled."

=item B<window-move-start-topleft>

=item B<window-move-start-top>

=item B<window-move-start-topright>

=item B<window-move-start-right>

=item B<window-move-start-bottomright>

=item B<window-move-start-bottom>

=item B<window-move-start-bottomleft>

=item B<window-move-start-left>

"A window move started from the specified grip."

An enhancement was made to L<adwm(1)> to place a C<_NET_WM_MOVERESIZE>
property on a window while being moved or resized indicating the nature
of the move or resize of the window.  The presence of this property can
be used to play this sound.

=item window-resize-start

"A window resize started."

This sound will be be played when a C<_NET_WM_MOVERESIZE> client message is
received on the root window that specifies C<_NET_WM_MOVERESIZE_SIZE_*> or
C<_NET_WM_MOVERESIZE_SIZE_KEYBOARD>.
Unfortunately, this only handles resize initiated by pager and panel,
but not by the window manager itself.

An enhancement will be made to L<adwm(1)> to place a C<_NET_WM_MOVERESIZE>
property on a window while being moved or resized indicating the nature
of the move or resize of the window.  The presence of this property can
be used to play this sound.

=item window-resize-end

"A window resize ended."

This sound can be played when a C<_NET_WM_MOVERESIZE> client message is
received on the root window that specifies C<_NET_WM_MOVERESIZE_CANCEL>
(and a size initiation was previously received).
Unfortunately, this only handles resize initiated by pager and panel,
but not by the window manager itself.  It also only handles resize
cancellation and not completion.

An enhancement was made to L<adwm(1)> to place a C<_NET_WM_MOVERESIZE>
property on a window while being moved or resized indicating the nature
of the move or resize of the window.  The presence of this property can
be used to play this sound.

=item B<window-resize-end-cancel>

"A window resize was cancelled."

=item B<window-resize-start-topleft>

=item B<window-resize-start-top>

=item B<window-resize-start-topright>

=item B<window-resize-start-right>

=item B<window-resize-start-bottomright>

=item B<window-resize-start-bottom>

=item B<window-resize-start-bottomleft>

=item B<window-resize-start-left>

"A window resize started from the specified grip."

This sound will be be played when a C<_NET_WM_MOVERESIZE> client message is
received on the root window that specifies C<_NET_WM_MOVERESIZE_SIZE_*>,
where the C<*> indicates the resize grip from which the resize is
initiated.  Unfortunately, this only handles resize initiated by pager
and panel, but not by the window manager itself.

An enhancement will be made to L<adwm(1)> to place a C<_NET_WM_MOVERESIZE>
property on a window while being moved or resized indicating the nature
of the move or resize of the window.  The presence of this property can
be used to play this sound.

=item desktop-switch-left

"The sound used when the window manager switches to another desktop
which [sic] is located to the left of the current screen."
This can be played on a C<active-workspace-changed> B<WnckScreen> signal
when the workspace index number decreases by one or wraps to one less
than C<_NET_NUMBER_OF_DESKTOPS>.

=item desktop-switch-right

"The sound used when the window manager switches to another desktop
which [sic] is located to the right of the current screen."
This can be played on a C<active-workspace-changed> B<WnckScreen> signal
when the workspace index number increases by one or wraps from one less
than C<_NET_NUMBER_OF_DESKTOPS> to zero.

=item desktop-switch-left-up

An extension to the XDG sound naming specification.
Used when the window manager switches to another desktop that is located
above the current desktop."
Falls back to I<desktop-switch-left>.
This can be played on a C<active-workspace-changed> B<WnckScreen>
signal.

=item desktop-switch-right-down

An extension to the XDG sound naming specification.
Used when the window manager switches to another desktop that is located
below the current desktop."
Falls back to I<desktop-switch-right>.
This can be played on a C<active-workspace-changed> B<WnckScreen>
signal.

=item window-switch

"The sound used when the window manager switches to another window."

This can be played on a C<active-window-changed> B<WnckScreen> signal.

=item notebook-tab-changed

Responsibility of GUI toolkit.

=item scroll-up

=item scroll-down

=item scroll-left

=item scroll-right

=item scroll-up-end

=item scroll-down-end

=item scroll-left-end

=item scroll-right-end

Responsibility of GUI toolkit.

=item dialog-ok

=item dialog-cancel

Responsibility of GUI toolkit.

=item drag-start

=item drag-accept

=item drag-fail

Responsibility of GUI toolkit.

=item link-pressed

=item link-released

Responsibility of GUI toolkit.

=item button-pressed

=item button-released

Responsibility of GUI toolkit.

=item menu-click

Responsibility of GUI toolkit.

=item button-toggle-on

=item button-toggle-off

Responsibility of GUI toolkit.

=item expander-toggle-on

=item expander-toggle-off

Responsibility of GUI toolkit.

=item menu-popup

"The sound used when a menu is popped up."

This could be effected by the appearance of a window (override redirect
or not) that has the B<_NET_WM_WINDOW_TYPE> set to
B<_NET_WM_WINDOW_TYPE_MENU>.
However, this is really the responsibility of GUI toolkit.

=item menu-popdown

"The sound used when a menu is popped down."

This could be effected by the disappearance of a window (override redirect
or not) that has the B<_NET_WM_WINDOW_TYPE> set to
B<_NET_WM_WINDOW_TYPE_MENU>.
However, this is really the responsibility of GUI toolkit.

=item menu-replace

"The sound use when replacing an active menu with another menu."

This could be effected by the appearance of a window (override redirect
or not) that has the B<_NET_WM_WINDOW_TYPE> set to
B<_NET_WM_WINDOW_TYPE_MENU>, while another such window is also
displayed.
However, this is really the responsibility of GUI toolkit.

=item tooltip-popup

"The sound used when a tooltip is popped up."

This could be effected by the appearance of a window (override redirect
or not) that has the B<_NET_WM_WINDOW_TYPE> set to
B<_NET_WM_WINDOW_TYPE_TOOLTIP>.
However, this is really the responsibility of GUI toolkit.

=item tooltip-popdown

"The sound used when a tooltip is popped down."

This could be effected by the disappearance of a window (override redirect
or not) that has the B<_NET_WM_WINDOW_TYPE> set to
B<_NET_WM_WINDOW_TYPE_TOOLTIP>.
However, this is really the responsibility of GUI toolkit.

=item item-selected

Responsibility of GUI toolkit.

=back

=item Game

=over

=item game-over-winner

=item game-over-loser

=item game-card-shuffle

=item game-human-move

=item game-computer-move

Responsibility of the game.

=back

=back

=head2 OTHER COMMON EVENT IDS

Following are some other common sound names that have been used previous
to the L<XDG Sound Naming> specification and are still in common use.
They do not follow the L<XDG Sound Naming> specification guidelines,
particularly with regard to hyphenation.

=over

=item bell

Bell.  A common C<Action> sound acting as a fallback for bell-terminal
and bell-window-system.

B<Spoken words:>
"Bell".

=item busytone

Busy Tone.  Common C<Notification> sound used when the phone/VOIP call
is dialed out and the responder is already engaged.  See also
I<phone-outgoing-busy>.

B<Spoken words:>
"Busy Tone! Busy! Busy Tone! Busy!".

=item complete

=item complete-print

=item desktop-switch-up

=item desktop-switch-down

=item dialog-error-critical

=item dialog-error-serious

=item dialtone

Dial Tone.  Common sound used when the receive of a telephone goes
off-hook for dialing a call.

B<Spoken words:>
"Give me your digits, I want to make a call!"

=item dummy-message

Dummy Message.  Common sound used when any message is needed, usually to
show how notifications are done.

B<Spoken words:>
"Dummy message."

=item message

Message.  Common C<Notification> sound used when a message is sent.

B<Spoken words:>
"Message sent."

=item newmail

New Mail.  Common C<Notification> sound used when new mail arrives.  See
also I<message-new-email>.

B<Spoken words:>
"New mail."

=item newmessage

New Message.  Common C<Notification> sound used when a new IM arrives.
See also I<message-new-instant>.

=item ring

=item screen-capture-complete

=item startup

=item test

=item voicemail

=item window-attention

=item window-question

=item window-slide

=item windows-slide

=back

=head2 WINDOW MANAGERS

=over

=item L<2bwm(1)>

is supported and works well.
Only sound event identifiers based on B<NetWM/EWMH> events are directly
supported.

=item L<adwm(1)>

is fully supported and works well.

There are a few sound event identifiers that need support from the
window manager still: I<window-move> and I<window-move-end>, for
example.  L<adwm(1)> will be extended to support those.

There are a set of sound event identifiers that can only be invoked by
the window manager.   This is because there is no external indication
that the action is being performed: I<window-move-end-attract>, for
example.  L<adwm(1)> will be extended to support these as well.

=item L<aewm(1)>

=item L<aewm++(1)>

=item L<afterstep(1)>

is supported and works well.
Only sound event identifiers based on B<NetWM/EWMH> events are directly
supported.

=item L<awesome(1)>

is supported and works well.
Only sound event identifiers based on B<NetWM/EWMH> events are directly
supported.

=item L<blackbox(1)>

is fully supported and works well.

There are a few sound event identifiers that need support from the
window manager still: I<window-move> and I<window-move-end>, for
example.  L<blackbox(1)> will be extended to support those.

There are a set of sound event identifiers that can only be invoked by
the window manager.   This is because there is no external indication
that the action is being performed: I<window-move-end-attract>, for
example.  L<blackbox(1)> will be extended to support these as well.

=item L<bspwm(1)>

=item L<ctwm(1)>

=item L<cwm(1)>

=item L<dtwm(1)>

=item L<dwm(1)>

=item L<echinus(1)>

=item L<etwm(1)>

=item L<failsafewm(1)>

=item L<fluxbox(1)>

=item L<flwm(1)>

=item L<fvwm(1)>

=item L<glasswm(1)>

=item L<goomwwm(1)>

=item L<herbstluftwm(1)>

=item L<i3(1)>

=item L<icewm(1)>

=item L<jwm(1)>

=item L<larswm(1)>

=item L<matwm2(1)>

=item L<metacity(1)>

=item L<mvwm(1)>

=item L<mwm(1)>

=item L<openbox(1)>

=item L<pekwm(1)>

=item L<spectrwm(1)>

=item L<twm(1)>

=item L<uwm(1)>

=item L<velox(1)>

=item L<vtwm(1)>

=item L<waimea(1)>

=item L<wind(1)>

=item L<wm2(1)>

=item L<wmaker(1)>

=item L<wmii(1)>

=item L<wmx(1)>

=item L<xdwm(1)>

=item L<yeahwm(1)>

=back

=head1 ENVIRONMENT

The following environment variables are considered by the program:

=over

=item B<SESSION_MANAGER>

Specifies the list of transport connections on which to contact the
session manager.

=item B<SM_SAVE_DIR>

Specifies the directory in which to save session files.  When unset, the
directory defaults to the user's home directory.

=back

=head1 HISTORY

I wrote this program particularly for use with L<adwm(1)> and other
tiling window managers that provide little feedback for desktop event
changes and do not typically run will with a panel.  It provides window,
focus and desktop change feedback without taking any screen real-estate
at all (because it uses sound instead).

I used to be a fan of FVWM back in the early days of Linux and always
defined sounds for window actions.  Short quick sounds that are
indicative of the action can help the user understand what is happening
on the desktop.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

=head1 SEE ALSO

=cut

# vim: set sw=4 tw=72 nocin spell spelllang=en_ca:
