=pod

=head1 NAME

xde-recent - pop-up recent files menu for XDE

=head1 SYNOPSIS

B<xde-recent> [I<OPTIONS>]

=head1 DESCRIPTION

Provides a recent files menu for window managers that do not provide one
themselves or as a better recent files menu for those that provide an
inferior one.  The recent files menu is a menus of recent (or favourite)
files or applications.  This is not a feedback mechanism, but is a
pop-up menu that can be used to access files or applications similar to
a file manager or application launcher.

=head1 OPTIONS

B<xde-recent> accepts the following options:

=head2 COMMAND OPTIONS

When specified, the following options alter the primary operating mode
of the program:

=over

=item [B<--popup>, B<-p>]

Post a pop-up menu.  Depending on the setting of the B<--button> option,
this will either post the pop-up menu at the current pointer position,
or centred on the workspace (screen and monitor) to which it
corresponds.

=item B<--help>, B<-h>

Prints usage information and the current options settings and defaults
to standard output, then exits.

=item B<--version>, B<-V>

Prints the version of the program and a brief copyright statement to
standard output, then exits.  Parse the first line with L<awk(1)> to
obtain just the version number.

=item B<--copying>, B<-C>

Prints the long copying permissions statement to standard output, then
exits.

=back

=head2 GENERAL OPTIONS

The following options are general options:

=over

=item B<--display>, B<-d> I<DISPLAY>

Specify the display to use (overriding the B<DISPLAY> environment
variable).  The default is the value of the B<DISPLAY> environment
variable.

=item B<--screen>, B<-s> I<SCREEN>

Specify the screen number to use.  The default is either specified by
the B<DISPLAY> environment variable (when that variable specifies a
screen); otherwise, all screens will be considered.

=item B<--button>, B<-b> I<BUTTON>

Specifies the button that was used to invoke the pop-up.  Defaults to
zero (0).  This should be the button that was used to pop the menu.  A
window manager that invokes this command in response to a button press
should release its passive grab on the button before invoking the window
menu so that the popped up menu can grab the button.  A I<BUTTON> of
zero (0) means that the program was invoked with a key-press instead of
a button.

=item B<--timestamp>, B<-T> I<TIMESTAMP>

Provides the X11 server time-stamp of the event that caused the pop-up.

=item B<--where>, B<-W> {B<pointer>|B<center>|B<topleft>|I<WHERE>}

Specifies the position for the pop-up menu.  This can be one of the
following values (case insensitive, may be abbreviated):

=over

=item C<pointer>

Place the northwest corner of the menu under the mouse pointer.  This
will always succeed.  This is the default when B<--button> is specified
and non-zero.

=item C<center>

Place the menu in the centre of the current monitor belonging to the
current screen.  The current monitor and screen is the monitor which
contains (or is closest to the location of) the pointer.

=item C<topleft>

Place the menu in the top-left corner of the work area (excluding panels
and docks) for the current screen.  The current screen is the screen
specified by the B<--display> or B<--screen> options, or the screen that
currently contains the pointer.

=item I<WHERE>

Place the menu at the location specified by I<WHERE>, which should be a
string containing a screen geometry that can be parsed by
L<XParseGeometry(3)>.  This is useful when the menu is launched from a
menu button in an external program and the menu should be positioned
adjacent to the button.  The geometry should be the geometry of the
widget against which the menu should be placed.  When the width and
height of the geometry are zero, it describes the point at which the
menu should be placed.

=back

When unspecified (which is the normal case), the default placement
algorithm is as follows:

=over

=item 1.

If B<--button> is specified and non-zero, place the menu at the pointer
regardless of the work area, monitor or screen.

=item 2.

Place the menu in the centre of the current monitor or screen.

=item 3.

Place the menu in the top left corner of the current work area.

=back

=item B<--include>, B<-i> {B<docs>|B<apps>|B<both>}

Specifies which objects to include in the list, as follows:

=over

=item C<docs>

Only include recently used files (documents) in the list.

=item C<apps>

Only include recent applications (launched F<.desktop> files) in the
list.

=item C<both>

Include both recently used files (documents) and recent applications
(launched F<.desktop> files) in the list.  This option is not terribly
useful.

=back

The default when unspecified is C<docs>.

=item B<--sorting>, B<-S> {B<recent>|B<favorite>}

Specifies the sorting to use for sorting the list, as follows:

=over

=item C<recent>

Sort the items in the list from the most recently used to the least
recently used items.  When this sorting is specified, the items from all
files can be used.

=item C<favorite>

Sort the item in the list from the most frequently used to the least
frequently used items.  When this sorting is specified, only the items
from the more current XBEL formatted files can be used.  (They are the
only ones that include frequency of use.)

=back

The default sorting is C<recent>.

=item B<--groups>, B<-g>

Specifies that items are to be sorted by group.  When unspecified, the
default is to disregard groups when sorting.

=item B<--verbose>, B<-v> [I<LEVEL>]

Increases or sets the output verbosity level to I<LEVEL>.  The default
level is C<1>.  Normal output is printed to standard output.  This
option may be repeated.

=item B<--debug>, B<-D> [I<LEVEL>]

Increases or sets the debugging verbosity level to I<LEVEL>.  The
default level is C<0>.  Debugging output is printed to standard error.
This option may be repeated.

=back

=head1 USAGE

To obtain a typical recently used file list, specify C<--include=docs>
and C<--sorting=recent>.

To obtain a typical favourite applications list, specify
C<--include=apps> and C<--sorting=favorite>.

To locate the menu under a button that was pressed in, for example, an
external panel, where the button has the geometry C<55x20+30+0>, specify
the C<--where='55x20+30+0'> option.  This will properly position the
menu under the button.

=head1 FILES

The following file locations are scanned for recent files and
applications:

=over

=item F<$XDG_CONFIG_HOME/xde/recent-applications>

This is the location of a simple recent applications file maintained by
the L<xde-app(1)> launcher application.

=item F<$HOME/.recently-used>

=item F<$XDG_DATA_HOME/recently-used>

These are the locations of a simple XML formatted recently used files list
maintained by legacy applications (as well as L<xdg-launch(1)>).


=item F<$HOME/.recent-applications>

=item F<$XDG_DATA_HOME/recent-applications>

These are the locations of a simple XML formatted recently used
applications list maintained by legacy applications (as well as
L<xdg-launch(1)>).

=item F<$XDG_DATA_HOME/recently-used.xbel>

This is the location of the current XBEL formatted recently used files
list maintained by current applications (as well as L<xdg-launch(1)>).

=item F<$XDG_DATA_HOME/recent-applications.xbel>

This is the location of the current XBEL formatted recently used
applications list maintained by current applications (as well as
L<xdg-launch(1)>.

=back

=head1 HISTORY

I wrote B<xde-recent> primarily for the L<adwm(1)> window manager and
other tiling window managers that do not support a recent files menu of
their own.  Existing recent files menus associated with panels do not
support the special features associated with tagging and tiling window
managers.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

=head1 SEE ALSO

L<getopt_long_only(3)>,
L<xde-ctools(1)>
L<xdg-launcher(1)>,
L<xde-app(1)>,
L<xde-places(1)>.

=cut

# vim: set sw=4 tw=72 nocin spell spelllang=en_ca:
