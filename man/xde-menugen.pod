=pod

=head1 NAME

xde-menugen -- generate XDG compliant menus

=head1 SYNOPSIS

xde-menugen -- [ OPTIONS ]

=head1 DESCRIPTION

B<xde-menugen> is a command-line program that can be used to generate an
XDG compliant menu in a number of formats to support configuration of
the root menu for light-weight window managers.

B<xde-menugen> is capable of generating either a complete menu for a
number of well-known window managers, or for generating a sub-menu that
can be included in the root menu of those window managers.

=head1 OPTIONS

B<xde-menugen> uses L<getopt_long_only(3)>, so non-ambiguous option
abbreviations are permitted.  B<xde-menugen> recognizes the following
options:

=head2 COMMAND OPTIONS

Command options affect the primary operating mode of the program.  Only
one command option can be specified.  B<xde-menugen> recognizes the
following command options:

=over

=item B<--monitor>, B<-m>

Specifies that B<xde-menugen> is not to exit after successfully
generating the menu, but to monitor pertinent directories for changes,
and regenerate the menu when changes are detected.  This option implies
the B<--output> option.  This option requires L<libinotify(3)>.

=item B<--replace>, B<-R>

Replace a currently running instance (that was invoked with the
B<--monitor> option).  It is not an error if no other instance is
running.  This option implies the B<--monitor> option.

=item B<--quit>, B<-q>

Ask a currently running instance (that was invoked with the B<--monitor>
option) to quit.  It is not an error if no other instance is running.

=item B<--help>, B<-h>

Print usage information, including the current values of option
defaults, and exit.

=item B<--version>, B<-V>

Print version information and exit.

=item B<--copying>, B<-C>

Print coping information and exit.

=back

=head2 GENERAL OPTIONS

=over

=item B<--verbose>, B<-v> [I<LEVEL>]

When generating output, generate more verbose output.  Increments or
sets the output verbosity to I<LEVEL>.

=item B<--debug>, B<-D> [I<LEVEL>]

Print debugging information to standard error during operation.
Increments or sets the debug verbosity to I<LEVEL>.

=item B<--format>, B<-f> I<FORMAT>

Specify the output format.  Recognized output formats are as follows:
L<2bwm(1)>,
L<adwm(1)>,
L<afterstep(1)>,
L<awesome(1)>,
L<blackbox(1)>,
L<ctwm(1)>,
L<cwm(1)>,
L<dtwm(1)>,
L<dwm(1)>,
L<echinus(1)>,
L<etwm(1)>,
L<fluxbox(1)>,
L<flwm(1)>,
L<fvwm(1)>,
L<icewm(1)>,
L<jwm(1)>,
L<matwm2(1)>,
L<metacity(1)>,
L<mwmw(1)>,
L<openbox(1)>,
L<pekwm(1)>,
L<spectrwm(1)>,
L<twm(1)>,
L<uwm(1)>,
L<vtwm(1)>,
L<waimea(1)>,
L<wind(1)>,
L<wmaker(1)>,
L<wmx(1)>,
L<yeahwm(1)>.

When unspecified, the setting of the C<_XDE_WM_NAME> property on the
root window (or the C<_NET_WM_NAME> property on the window manager check
window) is examined to determine the format.  This is accomplished by
converting the value of either property to all lower case.  See also,
L</ENVIRONMENT>.

=item B<--fullmenu>, B<-F>, B<--nofullmenu>, B<-N>

When specified, output a full menu and not only the application
sub-menu, or not.  The defaults it to output a full menu.

=item B<--desktop>, B<-d> I<DESKTOP>

Specify the desktop name for C<NotShowIn> and C<OnlyShowIn> comparisons.
The default is the all upper-case string corresponding to the format
unless C<XDG_CURRENT_DESKTOP> is defined.

=item B<--charset>, B<-c> I<CHARSET>

Specify the character set with which to output the menu.  Defaults to
the character set in use by the current locale.

=item B<--language>, B<-l> I<LANGUAGE>

Specify the output language for the menu.  Defaults to the language in
the current locale.

=item B<--root-menu>, B<-r> I<MENU>

Specify the location of the root menu file.  The default is calculated
using XDG environment variables (see L</ENVIRONMENT>), and defaults to
the file F<${XDG_MENU_PREFIX}applications.menu> in the
F<$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS> search path.

=item B<--die-on-error>, B<-e>

Abort execution on any error.

=item B<--output>, B<-o> I<FILENAME>

Write output to the file, I<FILENAME>.  This is particularly useful with
option B<--die-on-error> as the output will not be written at all if an
error is encountered.  If the I<FILENAME> is not specified, the default
menu location for the current B<--format> will be used.

=item B<--noicons>, B<-n>

Do not include icons in the generated menu files.  This option has no
effect when it is not possible to generate icons for the menu format.
That is, when the B<--format> is one such as L<blackbox(1)>, or
L<waimea(1)>, it is not possible to place icons in the menu and this
option is therefore ignored.  The default is to place icons in icon
capable generated menus.

=item B<--theme>, B<-t> I<THEME>

Specify the icon theme name to use when generating icons.  The default
is to obtain the icon theme name from the default locations (such as
the F<$HOME/.gtk2rc-2.0> file).

=item B<--style>, B<-s> I<STYLE>

Specify which format of output to generate.  I<STYLE> can be one of the
following:

=over

=item fullmenu

The default: output a full menu suitable for use as the root menu
specification for the window manager.

=item appmen

Output a complete menu; however, only output the applications portion of
the menu (no styles, window manager controls, logout, etc), suitable to
reference as an "Applications" menu.

=item entries

Only output the entires for the menu but not the enclosing menu itself:
this is useful for some pipe menu commands.

=back

=item B<--launch>, B<-L>, B<--nolaunch>

Specifies whether to use B<xde-launch(1)> to launch the desktop files
directly or not.  This option will only be honoured when the
L<xde-launch(1)> program is available and accessible.

=back

=head1 ENVIRONMENT

The following environment variables are significant to the operation of
B<xde-menugen>:

=over

=item C<$XDG_CURRENT_DESKTOP>

Specifies the current desktop.  When the B<--format> is not specified,
the format defaults to the value of this environment variable converted
to lower-case.  When the B<--desktop> is not specified, the desktop
defaults to the value of this environment variable.

=item C<$XDG_MENU_PREFIX>

Specifies the prefix to apply to the default menu name to derive the
root menu unless specified with the B<--root-menu> option.  When
unspecified, this variable defaults to a null string.

B<xde-menugen> finds the root menu using the following logic:

=over

=item 1.

If a file name is specified using the B<--root-menu> option, that file
name is used as the root menu.

=item 2.

If not found, the file name F<${XDG_MENU_PREFIX}applications.menu> is
sought in each of the sub-directories named F<menu> in the path
F<$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS>.

=item 3.

If not found, the file name F<applications.menu> is sought in each of
the F<menu> sub-directories in the path
F<$XDG_CONFIG_HOME:$XDG_CONFIG_DIRS>.

=back

=item C<$XDG_CONFIG_HOME>

Specifies the user XDG configuration directory.  When unspecified, defaults
to F<$HOME/.config> in accordance with XDG specifications.

=item C<$XDG_CONFIG_DIRS>

Specifies the system XDG configuration directories.  When unspecified,
defaults to F</etc/xdg> in accordance with XDG specifications.

=item C<$XDG_DATA_HOME>

Specifies the user XDG data directory.  When unspecified, defaults to
F<$HOME/.local/share> in accordance with XDG specifications.

=item C<$XDG_DATA_DIRS>

Specifies the system XDG data directory search path.  When unspecified,
defaults to F</usr/local/share:/usr/share> in accordance with XDG
specific ations.

=item C<$XDG_ICON_THEME>

Specifies the name of the icon theme.  When not specified, the icon
theme will be determined from configuration sources (e.g.
F<$HOME/.gtkrc-2)>).

=back

=head1 HISTORY

B<xde-menugen> was written for a number of reasons:

=over

=item 1.

Existing L<fluxbox(1)> menu generators that read XDG .desktop files
(L<fbmenugen(1)>, L<menutray(1)>) do not conform to the XDG menu
generation specifications and in particular are incapable of merging
menus.

=item 2.

Existing XDG menu generators (such as the SuSE L<xdg_menu(1)> script) do
not property merge default merge directories and do not observer
C<E<lt>LayoutE<gt>> commands.  Also, they are poor at including icons
in the generated menus.  They , of course, do not generate tray menus
either.

=item 3.

Existing XDG menu generators run once and keep cache information, or
have a C<regenerate> command placed in the menu.  They do not monitor
XDG directories for changes and update menus on changes.

=item 4.

The L<lxpanel(1)> and L<pcmanfm(1)> menu generators do not have any of
the above deficiencies; however, they do not create window manager
specific sub-menus.

=back

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

=head1 SEE ALSO

L<xde-style(1)>

=cut

# vim:set ft=pod tw=72 nocin:
