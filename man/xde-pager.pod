=pod

=head1 NAME

xde-pager - desktop cycling for XDE

=head1 SYNOPSIS

B<xde-pager> [I<OPTIONS>]

=head1 DESCRIPTIONS

Provides keyboard-based desktop cycling feedback for window managers
that do not provide desktop cycling themselves or for those that provide
an inferior feedback.  The desktop cycling list is a list of desktops,
each corresponding to a workspace on the current monitor (or multiple
monitors) and is accessed with a hot key.

=head1 OPTIONS

B<xde-pager> accepts the following options:

=head2 COMMAND OPTIONS

When specified, the following options alter the primary operating mode
of the program:

=over

=item [B<--cycle>, B<-c>]

Begin a desktop cycle by popping up the cycle window.  This is the
normal and default operating mode of the program.

=item B<--popup>, B<-p>

As a running instance of B<xde-pager> to pop up the desktop selection
window.

=item B<--quit>, B<-q>

Ask a running instance of B<xde-pager> to quit.

=item B<--replace>, B<-r>

Replace a running instance of B<xde-pager>.

=item B<--help>, B<-h>

Prints usage information and the current options settings and defaults
and exits.

=item B<--version>, B<-V>

Prints the version of the program and a brief copyright statement and
exits.  Parts the first line with L<awk(1)> to obtain just the version
number.

=item B<--copying>, B<-C>

Prints the long copying permission statement and exits.

=back

=head2 GENERAL OPTIONS

The following options are general options:

=over

=item B<--display>, B<-d> I<DISPLAY>

Specify the display to use (overriding the B<DISPLAY> environment
variable).  The default is the value of the B<DISPLAY> environment
variable.

=item B<--screen>, B<-s> I<SCREEN>

Specify the screen number to use when locating the current workspace.
The default is either specified by the B<DISPLAY> environment variable
(which that variable specifies a screen); otherwise, all screens will be
considered.

=item B<--monitor>, B<-m> I<MONITOR>

Specify the monitor to use when locating the current desktop.  The
default is the monitor containing the current window as specified by
B<--which> or the monitor currently containing (or nearest to) the
pointer.

=item B<--button>, B<-b> I<BUTTON>

Specify that the program was invoked with a button press or button,
I<BUTTON>.  This is only useful with option B<--popup>.

=item B<--timestamp>, B<-T> I<TIMESTAMP>

Provides the X11 server time-stamp of the event that initiated the
window cycle.

=item B<--which>, B<-w> {B<active>|B<focused>|B<pointer>|B<select>|I<WINDOW>}

Specifies which window to use to find the current monitor for cycling.
This can be one of the following values (case insensitive, may be
abbreviated):

=over

=item C<active>

Use the monitor of the active active window (in the EWMH sense) as the
current monitor.  This is the window specified by the
B<_NET_ACTIVE_WINDOW> property on the
root window.

=item C<focused>

Use the focused window (in the EWMH sense or simply the client with the
keyboard focus) as the current window.  This is the client with a
B<_NET_WM_STATE_FOCUSED> atom set in B<_NET_WM_STATE>, or the client
(visible client with the B<WM_STATE> property set to state C<Normal>)
that has the keyboard focus according to the X server.

If no focused client can be found (e.g. focus is on the root window),
current window selection falls back to C<active>, as described above.

=item C<pointer>

Use the client holding a pointer grab or the client or window manager
frame directly under the pointer as the current window.

=item I<WINDOW>

Specifies the XID of a window to use as the current window.

=back

When a client window cannot be found to use as the current window, no
current window is selected until the first cycle.

=item B<--id>, B<-x> I<WINDOW>

Specify the X window identifier (XID) of the EWMH/NetWM client window to
use as the current window.  Can also be specified with B<--which>.

=item B<--where>, B<-W> (B<pointer>|B<center>|B<topleft>|B<bottomright>|I<GEOMETRY>

Specifies the position of the cycle window.  This can be one of the
following values (case insensitive, may be abbreviated):

=over

=item C<pointer>

Place the northwest corner of the cycle window under the mouse pointer.

=item C<center>

Place the cycle window in the centre of the active monitor.

=item C<topleft>

Place the cycle window in the top-left corner of the active monitor.

=item C<bottomright>

Place the cycle window in the bottom-left corner of the active monitor.

=item I<GEOMETRY>

Specify the position of the menu by geometry specification, I<GEOMETRY>.

=back

When unspecified, the default is C<center>.

=item B<--hidden>

Also list hidden windows when cycling.  The default is to skip hidden
windows.

=item B<--minimized>

Also list minimized windows when cycling.  The default is to skip
minimized windows.

=item B<--all-monitors>

When cycling windows, also cycle through windows displayed on monitors
other than the current monitor.  This includes windows on workspaces
that are currently visible on a monitor.

=item B<--all-workspaces>

When cycling windows, also cycle through windows displayed on workspaces
other than the current one.  As windows are cycled, the current
workspace may change as windows from other workspaces are cycled.

=item B<--order>, B<-O> [I<ORDERTYPE>]

Specify the order of the windows in the cycle list.  The I<ORDERTYPE>
specifies which windows to cycle through and the order in which to
cycle.  The windows in the cycle list can also be adjusted using the
B<--all-monitors>, B<--all-workspaces>, B<--hidden> and B<--minimized>
options.  The I<ORDERTYPE> can be one of the following:

=over

=item C<client>

Cycle through the windows in the client list in client order.  See also
the B<--group> option.

=item C<stacking>

Cycle through the windows in the client list in stacking order.  See
also the B<--group> option.

=back

=item B<--group>, B<-G> [I<GROUPTYPE>]

Specify the grouping of the windows in the cycle list.  The I<GROUPTYPE>
specifies the grouping of windows for cycling, and can be one of the
following:

=over

=item C<none>

Do not group the windows in the cycle list, simply list them in the
order specified by B<--order>.

=item C<workspace>

Groups the windows in the cycle list.

=item C<monitor>

=back

=back

=head1 USAGE

B<xde-pager> currently uses F<libwnck+> or F<libwnck> to detect
workspace changes and to provide the pager feedback, so the window
manager must support some modicum of EWMH/NetWM compliance for the
feedback to be effective.  Eventually I might make F<libwnkc+> support
GNOME1/WinWM, OSF/Motif and even just ICCCM compliant window managers,
but, for now, some EWMH/NetWM compliance is needed.

Run B<xde-pager> in the background or launch using the supplied XDG
autostart file.  The program takes the following steps:

=over

=item 1.

Waits for a desktop change as signalled by a change to
B<_NET_CURRENT_DESKTOP> on the root window of any screen.

=item 2.

When the desktop changes, the program grabs the pointer and the
keyboard.  If there is a keyboard modifier down, it displays the
feedback window and proxies key presses and releases to the root window.  
When all modifiers are released or when a selection is made or its
pointer grab is broken, it drops the feedback window and waits for
another desktop change.

=back

=head1 HISTORY

I wrote this program particularly for use with L<adwm(1)> and other
tiling window managers that provide no feedback for desktop changes and
do not typically run well with a panel or pager.  It provides workspace
change feedback without taking up valuable screen real-estate while the
workspace is not changing.  Also, when used with F<libwnck+>, the pager
is multiple-monitor aware and can handle per-monitor tagged workspaces.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

=head1 SEE ALSO

L<xde-keys(1)>

=cut

# vim: set sw=4 tw=72 nocin:
