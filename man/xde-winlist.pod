=pod

=head1 NAME

xde-winlist - window list for XDE

=head1 SYNOPSIS

B<xde-winlist> [I<OPTIONS>]

=head1 DESCRIPTION

Provides a window list for window managers that do not provide one
themselves or as a better window list for those that provide an inferior
one.  The window list is a list of windows on workspaces with a sub-menu
of actions that can be performed against each window or workspace and is
normally access with a hot key, or by clicking on a window, or by
pressing one or more modifier keys and clicking on a window.
B<xde-winlist> supports all of these activations.  See L</USAGE> and
L</WINDOW MANAGERS> for more information about activation.  For hot key
activation see L<xde-keys(1)>.

=head1 OPTIONS

B<xde-winlist> accepts the following options:

=head2 COMMAND OPTIONS

When specified, the following options alter the primary operating mode
of the program:

=over

=item I<unspecified>

When no command option is specified, the default is to run the window
list without replacing an existing instance.

=item B<--replace>, B<-r>

Run the window list, but replace a running instance of B<xde-winlist>.

=item B<--quit>, B<-q>

Ask a running instance of B<xde-winlist> to quit.

=item B<--help>, B<-h>

Prints usage information and the current options settings and defaults
and exits.

=item B<--version>, B<-V>

Prints the version of the program and a brief copyright statement and
exits.  Parts the first line with L<awk(1)> to obtain just the version
number.

=item B<--copying>, B<-C>

Prints the long copying permission statement and exits.

=back

=head2 GENERAL OPTIONS

The following options are general options:

=over

=item B<--display>, B<-d> I<DISPLAY>

Specify the display to use (overriding the B<DISPLAY> environment
variable).  The default is the value of the B<DISPLAY> environment
variable.

=item B<--screen>, B<-s> I<SCREEN>

Specify the screen number to use when locating the current window and
workspace.  The default is either specified by the B<DISPLAY>
environment variable (which that variable specifies a screen);
otherwise, all screens will be considered.

=item B<--timeout>, B<-t> I<TIMEOUT>

When cycling windows with the mouse or other than a modified keystroke,
or if a key is pressed that does not result in a active window change,
the feedback window will persist for I<TIMEOUT> milliseconds.  The
default is 1000 (or 1 second).

=item B<--border>, B<-B> I<WIDTH>

Places a border around the window list of I<WIDTH> pixels.  The default
is 5 pixels.

=item B<--button>, B<-b> I<BUTTON>

Specifies the button that was used to invoke the pop up.  Defaults to
zero (0).  This should be the button that was used to pop the menu.  A
window manager that invokes this command in response to a button press
should release its passive grab on the button before invoking the window
menu so that the popped up menu can grab the button.  A I<BUTTON> of
zero (0) means that the program was invoked with a key-press instead of
a button.

=item B<--timestamp>, B<-T> I<TIMESTAMP>

Provides the X11 server time-stamp of the event that caused the pop up.

=item B<--cycle>, B<-c>.

Provide a cycle list pop up instead of a list.  Cycle list pop up lists
will not be dismissed until a modifier key is released.

=item B<--hidden>

When listing or cycling windows, also list or cycle through hidden
windows.  The default is to skip hidden windows or windows that have the
skip-window-list attribute.

=item B<--minimized>

When listing or cycling windows, also list or cycle through minimized
windows.  The default is to skip minimized windows or windows that have
the skip-window-list attribute.

=item B<--all-monitors>

When listing or cycling windows, also list or cycle through windows
displayed on monitors other than the current one.  This includes windows
on workspaces that are currently visible on a monitor.

=item B<--all-workspaces>

When cycling windows, also cycle through windows displayed on workspaces
other than the current one.  As windows are cycled, the current
workspace may change as windows from other workspaces are cycled.

=item B<--order>, B<-O> [I<ORDERTYPE>]

Specify the order of the selection list or cycle list.  The I<ORDERTYPE>
specifies which windows to list or cycle through and the order in which
to list or cycle them.  The windows in the list can also be adjusted
using the B<--all-monitors>, B<--all-workspaces>, B<--hidden> and
B<--minimized> options.  The I<ORDERTYPE> can be one of the following:

=over

=item C<client>

Cycle through the windows in the client list in client order.

=item C<stacking>

Cycle through the windows in the stacking order client list in stacking
order (or when not supported, determine stacking order directly and use
the client list in the determined stacking order).

=back

The default is client list order.

=item B<--noactivate>, B<-n>

When selecting or cycling windows, do not activate them.  The default is
to activate the selected or cycled window.   When neither B<--raise> nor
B<--focus> are specified, this results in only highlighting the menu
selection.  Activation of the window will still occur; however, when the
window is selected (a modifier key is released).

=item B<--raise>, B<-r>

When selecting or cycling windows, raise the window.  The default is to
only activate the selected or cycled window and not to explicitly raise
it.  Some window managers raise windows when activated (others do not).
This provides a modicum of control.

=item B<--restore>, B<-R>

When cycling windows, restore the previous cycled window to its former
state before activating or raising the next window.  This is useful when
windows are hidden or minimized and included in the list using the
B<--hidden> or B<--minimized> options.  Only iconification will be
restored: window stacking is not restored.

=item B<--key>, B<-k> [I<KEY>:I<KEY>]

Specify the key combination used to pop up the cycle list.  Modifier
keys have to be specified, only the forward and reverse cycle keys need
be specified.  Pressing the forward key will cycle forward through the
selection; the reverse key, backward.  Only useful when B<--cycle> is
also specified.  The default is C<Alt+Tab:Shift+Alt+Tab>.

=item B<--verbose>, B<-v> [I<LEVEL>]

Increases or sets the output verbosity level to I<LEVEL>.  The default
level is C<1>.  Normal output is printed to standard output.  This
option may be repeated.

=item B<--debug>, B<-D> [I<LEVEL>]

Increases or sets the debugging verbosity level to I<LEVEL>.  The
default level is C<0>.  Debugging output is printed to standard error.
This option may be repeated.

=back

=head2 SESSION MANAGEMENT OPTIONS

X session management options are not used by another user other than the
X11 Session Manager.  The following options are used by X session
management:

=over

=item B<-clientId> I<CLIENTID>

Specifies the X Session Management client identifier of the previously
running session of B<xde-winlist>.

=item B<-restore> I<SAVEFILE>

Specifies the X Session Management filename of a file to which to save
session information.

=back

=head1 USAGE

B<xde-winlist> currently uses F<libwnck+> or F<libwnck> both to identify
the window manager and to provide the window list.  The range and format
of the window actions in the window list provided by F<libwcnk+> is
superior to L<libwnck>.  This use means that B<xde-winlist> does not
current provide much support for window managers that do not have a
modicum of compliance with the EWMH/NetWM specifications.  That may
change in the future.

=head1 HISTORY

I wrote this program particularly for use with L<adwm(1)> and other
tiling window managers that provide no feedback for window cycling
changes and do not typically run will with a panel or window list.  It
provides window cycling feedback without taking up valuable screen
real-estate while the windows are not cycling.  Also, when used with
F<libwnck+>, the window list is multiple-monitor aware and can handle
per-monitor tagged workspaces.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

=head1 SEE ALSO

L<xde-keys(1)>

=cut

# vim: set sw=4 tw=72 nocin spell spelllang=en_ca:
